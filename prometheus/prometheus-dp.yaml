apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: prometheus-deployment
  name: prometheus
  namespace: kube-system
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 60
            preference:
              matchExpressions:
              - {key: devops-node, operator: In, values: ["beijing-node"]}
      containers:
      - image: prom/prometheus:v2.20.1
        name: prometheus
        command:
        - "/bin/prometheus"
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--storage.tsdb.retention=168h"
        - "--web.console.libraries=/etc/prometheus/console_libraries"
        - "--web.console.templates=/etc/prometheus/consoles"
        - "--web.enable-lifecycle"
        - "--log.level=warn"
        ports:
        - containerPort: 9090
          protocol: TCP
        securityContext:
          runAsUser: 0
        resources:
          requests:
            cpu: 10m
            memory: 500Mi
          limits:
            cpu: 500m
            memory: 2048Mi
        env:
        - name: TZ
          value: Asia/Shanghai        
        volumeMounts:
        - mountPath: "/prometheus"
          name: prometheus-kube-system
          subPath: prometheus-devops-dispute
        - mountPath: "/etc/prometheus"
          name: config-volume
      serviceAccountName: prometheus    
      volumes:
      - name: prometheus-kube-system
        persistentVolumeClaim:
          claimName: prometheus
      - name: config-volume
        configMap:
          name: prometheus-config
